var st = require("../statkit.js")
  , tape = require("tape");

tape.Test.prototype.nearequal = function (a, b, tol, msg, extra) {
  this._assert(b === 0.0 ? Math.abs(a) < tol : (a - b) / b < tol, {
    message : msg,
    operator : 'near equal',
    actual : a,
    expected : b,
    extra : extra
  });
};

tape("dists-norm", function(t) {

  var x = [
     0.5000000000000000E+00,
     0.5398278372770290E+00,
     0.5792597094391030E+00,
     0.6179114221889526E+00,
     0.6554217416103242E+00,
     0.6914624612740131E+00,
     0.7257468822499270E+00,
     0.7580363477769270E+00,
     0.7881446014166033E+00,
     0.8159398746532405E+00,
     0.8413447460685429E+00,
     0.9331927987311419E+00,
     0.9772498680518208E+00,
     0.9937903346742239E+00,
     0.9986501019683699E+00,
     0.9997673709209645E+00,
     0.9999683287581669E+00];

  var p = [
     0.0000000000000000E+00,
     0.1000000000000000E+00,
     0.2000000000000000E+00,
     0.3000000000000000E+00,
     0.4000000000000000E+00,
     0.5000000000000000E+00,
     0.6000000000000000E+00,
     0.7000000000000000E+00,
     0.8000000000000000E+00,
     0.9000000000000000E+00,
     0.1000000000000000E+01,
     0.1500000000000000E+01,
     0.2000000000000000E+01,
     0.2500000000000000E+01,
     0.3000000000000000E+01,
     0.3500000000000000E+01,
     0.4000000000000000E+01];

  for (var i = 0; i < p.length; ++i) {
    t.nearequal(st.norminv(x[i]), p[i], 10e-15, "norminv");
  }
  for (var i = 0; i < p.length; ++i) {
    t.nearequal(st.normcdf(p[i]), x[i], 10e-12, "normcdf");
  }

  t.end()
})
